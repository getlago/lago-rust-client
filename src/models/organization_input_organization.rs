/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.32.0-beta
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrganizationInputOrganization {
    #[serde(rename = "webhook_url", skip_serializing_if = "Option::is_none")]
    pub webhook_url: Option<String>,
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "address_line1", skip_serializing_if = "Option::is_none")]
    pub address_line1: Option<String>,
    #[serde(rename = "address_line2", skip_serializing_if = "Option::is_none")]
    pub address_line2: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "zipcode", skip_serializing_if = "Option::is_none")]
    pub zipcode: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    #[serde(rename = "legal_name", skip_serializing_if = "Option::is_none")]
    pub legal_name: Option<String>,
    #[serde(rename = "legal_number", skip_serializing_if = "Option::is_none")]
    pub legal_number: Option<String>,
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    #[serde(rename = "email_settings", skip_serializing_if = "Option::is_none")]
    pub email_settings: Option<Vec<EmailSettings>>,
    #[serde(rename = "billing_configuration", skip_serializing_if = "Option::is_none")]
    pub billing_configuration: Option<Box<crate::models::BillingConfigurationOrganization>>,
}

impl OrganizationInputOrganization {
    pub fn new() -> OrganizationInputOrganization {
        OrganizationInputOrganization {
            webhook_url: None,
            country: None,
            address_line1: None,
            address_line2: None,
            state: None,
            zipcode: None,
            email: None,
            city: None,
            legal_name: None,
            legal_number: None,
            timezone: None,
            email_settings: None,
            billing_configuration: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EmailSettings {
    #[serde(rename = "invoice.finalized")]
    InvoicePeriodFinalized,
    #[serde(rename = "credit_note.created")]
    CreditNotePeriodCreated,
}

impl Default for EmailSettings {
    fn default() -> EmailSettings {
        Self::InvoicePeriodFinalized
    }
}

