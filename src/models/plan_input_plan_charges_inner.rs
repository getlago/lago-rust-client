/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.21.0-beta
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PlanInputPlanChargesInner {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "billable_metric_id", skip_serializing_if = "Option::is_none")]
    pub billable_metric_id: Option<String>,
    /// Charge model type
    #[serde(rename = "charge_model", skip_serializing_if = "Option::is_none")]
    pub charge_model: Option<ChargeModel>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<serde_json::Value>,
    #[serde(rename = "group_properties", skip_serializing_if = "Option::is_none")]
    pub group_properties: Option<Vec<crate::models::PlanInputPlanChargesInnerGroupPropertiesInner>>,
}

impl PlanInputPlanChargesInner {
    pub fn new() -> PlanInputPlanChargesInner {
        PlanInputPlanChargesInner {
            id: None,
            billable_metric_id: None,
            charge_model: None,
            properties: None,
            group_properties: None,
        }
    }
}

/// Charge model type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChargeModel {
    #[serde(rename = "standard")]
    Standard,
    #[serde(rename = "graduated")]
    Graduated,
    #[serde(rename = "package")]
    Package,
    #[serde(rename = "percentage")]
    Percentage,
    #[serde(rename = "volume")]
    Volume,
}

impl Default for ChargeModel {
    fn default() -> ChargeModel {
        Self::Standard
    }
}

